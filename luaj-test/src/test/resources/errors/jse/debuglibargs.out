====== debug.debug - no tests ======
====== debug.gethook ======
--- checkallpass
-		debug.gethook()	nil,'',0
====== debug.getinfo ======
--- checkallpass
-		debug.getinfo(<function>)	<table>
-		debug.getinfo(25)	
-		debug.getinfo('25')	
--- checkallpass
-		debug.getinfo(<thread>,<function>)	<table>
-		debug.getinfo(<thread>,25)	
-		debug.getinfo(<thread>,'25')	
--- checkallpass
-		debug.getinfo(<function>,'')	<table>
-		debug.getinfo(25,'')	
-		debug.getinfo('25','')	
-		debug.getinfo(<function>,'n')	<table>
-		debug.getinfo(25,'n')	
-		debug.getinfo('25','n')	
-		debug.getinfo(<function>,'flnStu')	<table>
-		debug.getinfo(25,'flnStu')	
-		debug.getinfo('25','flnStu')	
--- checkallpass
-		debug.getinfo(<thread>,<function>,'')	<table>
-		debug.getinfo(<thread>,25,'')	
-		debug.getinfo(<thread>,'25','')	
-		debug.getinfo(<thread>,<function>,'n')	<table>
-		debug.getinfo(<thread>,25,'n')	
-		debug.getinfo(<thread>,'25','n')	
-		debug.getinfo(<thread>,<function>,'flnStu')	<table>
-		debug.getinfo(<thread>,25,'flnStu')	
-		debug.getinfo(<thread>,'25','flnStu')	
--- checkallerrors
-		debug.getinfo()	...function or level...
--- checkallerrors
-		debug.getinfo(nil)	...function or level...
-		debug.getinfo('abc')	...function or level...
-		debug.getinfo(true)	...function or level...
-		debug.getinfo(<thread>)	...function or level...
--- checkallerrors
-		debug.getinfo(<function>,true)	...string expected...
-		debug.getinfo(<function>,<table>)	...string expected...
-		debug.getinfo(<function>,<function>)	...string expected...
-		debug.getinfo(<function>,<thread>)	...string expected...
--- checkallerrors
-		debug.getinfo(nil,<function>)	...string expected...
-		debug.getinfo('abc',<function>)	...string expected...
-		debug.getinfo(true,<function>)	...string expected...
--- checkallerrors
-		debug.getinfo('abc',<function>,'abc')	...string expected...
-		debug.getinfo(1.25,<function>,'abc')	...string expected...
-		debug.getinfo(true,<function>,'abc')	...string expected...
-		debug.getinfo(<table>,<function>,'abc')	...string expected...
-		debug.getinfo(<function>,<function>,'abc')	...string expected...
--- checkallerrors
-		debug.getinfo(<thread>,<function>,'qzQZ')	...invalid option...
====== debug.getlocal ======
f: x,y,a,b,p,q	1	2	nil	nil	p	q
--- checkallpass
-		debug.getlocal(<function>,1)	'x'
-		debug.getlocal(1,1)	'(*temporary)'
-		debug.getlocal(<function>,'2')	'y'
-		debug.getlocal(1,'2')	
--- checkallpass
-		debug.getlocal(<thread>,<function>,1)	'x'
--- checkallerrors
-		debug.getlocal()	...number expected...
--- checkallerrors
-		debug.getlocal(<function>,nil)	...number expected...
-		debug.getlocal(25,nil)	...number expected...
-		debug.getlocal('25',nil)	...number expected...
-		debug.getlocal(<function>,'abc')	...number expected...
-		debug.getlocal(25,'abc')	...number expected...
-		debug.getlocal('25','abc')	...number expected...
-		debug.getlocal(<function>,true)	...number expected...
-		debug.getlocal(25,true)	...number expected...
-		debug.getlocal('25',true)	...number expected...
-		debug.getlocal(<function>,<table>)	...number expected...
-		debug.getlocal(25,<table>)	...number expected...
-		debug.getlocal('25',<table>)	...number expected...
-		debug.getlocal(<function>,<function>)	...number expected...
-		debug.getlocal(25,<function>)	...number expected...
-		debug.getlocal('25',<function>)	...number expected...
-		debug.getlocal(<function>,<thread>)	...number expected...
-		debug.getlocal(25,<thread>)	...number expected...
-		debug.getlocal('25',<thread>)	...number expected...
--- checkallerrors
-		debug.getlocal(nil,1.25)	...number expected...
-		debug.getlocal('abc',1.25)	...number expected...
-		debug.getlocal(true,1.25)	...number expected...
-		debug.getlocal(<thread>,1.25)	...number expected...
-		debug.getlocal(nil,'789')	...number expected...
-		debug.getlocal('abc','789')	...number expected...
-		debug.getlocal(true,'789')	...number expected...
-		debug.getlocal(<thread>,'789')	...number expected...
--- checkallerrors
-		debug.getlocal('abc',<function>,1)	...number expected...
-		debug.getlocal(1.25,<function>,1)	...number expected...
-		debug.getlocal(true,<function>,1)	...number expected...
-		debug.getlocal(<table>,<function>,1)	...number expected...
-		debug.getlocal(<function>,<function>,1)	...number expected...
-		debug.getlocal('abc',<function>,'2')	...number expected...
-		debug.getlocal(1.25,<function>,'2')	...number expected...
-		debug.getlocal(true,<function>,'2')	...number expected...
-		debug.getlocal(<table>,<function>,'2')	...number expected...
-		debug.getlocal(<function>,<function>,'2')	...number expected...
--- checkallerrors
-		debug.getlocal(<thread>,100,1)	...level out of range...
====== debug.getmetatable ======
--- checkallpass
-		debug.getmetatable(nil)	
-		debug.getmetatable('abc')	<table>
-		debug.getmetatable(1.25)	
-		debug.getmetatable(true)	
-		debug.getmetatable(<table>)	
-		debug.getmetatable(<function>)	
-		debug.getmetatable(<thread>)	
--- checkallerrors
-		debug.getmetatable()	...value expected...
====== debug.getregistry ======
--- checkallpass
-		debug.getregistry()	<table>
--- checkallpass
-		debug.getregistry(nil)	<table>
-		debug.getregistry('abc')	<table>
-		debug.getregistry(1.25)	<table>
-		debug.getregistry(true)	<table>
-		debug.getregistry(<table>)	<table>
-		debug.getregistry(<function>)	<table>
-		debug.getregistry(<thread>)	<table>
====== debug.getupvalue ======
--- checkallpass
-		debug.getupvalue(<function>,1)	'_ENV',<table>
-		debug.getupvalue(<function>,'2')	'p','p'
--- checkallerrors
-		debug.getupvalue()	...number expected...
--- checkallerrors
-		debug.getupvalue(nil,1)	...function expected...
-		debug.getupvalue('abc',1)	...function expected...
-		debug.getupvalue(1.25,1)	...function expected...
-		debug.getupvalue(true,1)	...function expected...
-		debug.getupvalue(<table>,1)	...function expected...
-		debug.getupvalue(<thread>,1)	...function expected...
-		debug.getupvalue(nil,'2')	...function expected...
-		debug.getupvalue('abc','2')	...function expected...
-		debug.getupvalue(1.25,'2')	...function expected...
-		debug.getupvalue(true,'2')	...function expected...
-		debug.getupvalue(<table>,'2')	...function expected...
-		debug.getupvalue(<thread>,'2')	...function expected...
--- checkallerrors
-		debug.getupvalue(<function>,nil)	...number expected...
-		debug.getupvalue(<function>,'abc')	...number expected...
-		debug.getupvalue(<function>,true)	...number expected...
-		debug.getupvalue(<function>,<table>)	...number expected...
-		debug.getupvalue(<function>,<function>)	...number expected...
-		debug.getupvalue(<function>,<thread>)	...number expected...
--- checkallpass
-		debug.getuservalue()	
--- checkallpass
-		debug.getuservalue(nil)	
-		debug.getuservalue('abc')	
-		debug.getuservalue(1.25)	
-		debug.getuservalue(true)	
-		debug.getuservalue(<table>)	
-		debug.getuservalue(<function>)	
-		debug.getuservalue(<thread>)	
--- checkallpass
-		debug.sethook()	
--- checkallpass
--- checkallpass
-		debug.sethook(<function>,'cr')	
-		debug.sethook(<function>,'l')	
--- checkallpass
-		debug.sethook(nil,<function>,'cr')	
-		debug.sethook(<thread>,<function>,'cr')	
-		debug.sethook(nil,<function>,'l')	
-		debug.sethook(<thread>,<function>,'l')	
--- checkallerrors
-		debug.sethook('abc')	...string expected...
-		debug.sethook(<function>)	...string expected...
-		debug.sethook(true)	...string expected...
--- checkallerrors
-		debug.sethook('abc',nil,'cr')	...string expected...
-		debug.sethook(<function>,nil,'cr')	...string expected...
-		debug.sethook(true,nil,'cr')	...string expected...
-		debug.sethook('abc',<function>,'cr')	...string expected...
-		debug.sethook(<function>,<function>,'cr')	...string expected...
-		debug.sethook(true,<function>,'cr')	...string expected...
-		debug.sethook('abc',nil,'l')	...string expected...
-		debug.sethook(<function>,nil,'l')	...string expected...
-		debug.sethook(true,nil,'l')	...string expected...
-		debug.sethook('abc',<function>,'l')	...string expected...
-		debug.sethook(<function>,<function>,'l')	...string expected...
-		debug.sethook(true,<function>,'l')	...string expected...
====== debug.setlocal ======
f: x,y,a,b,p,q	1	2	nil	nil	p	q
--- checkallpass
-		debug.setlocal(1,1,nil)	'(*temporary)'
-		debug.setlocal(1,1,'foo')	'(*temporary)'
f: x,y,a,b,p,q	1	2	1	2	p	q
--- checkallpass
-		debug.setlocal(<thread>,1,2,nil)	
-		debug.setlocal(<thread>,1,2,'bar')	
f: x,y,a,b,p,q	1	2	1	2	p	q
--- checkallerrors
-		debug.setlocal()	...number expected...
--- checkallerrors
-		debug.setlocal(1)	...value expected...
--- checkallerrors
-		debug.setlocal(1,1)	...value expected...
--- checkallerrors
-		debug.setlocal(<thread>,1,2)	...value expected...
--- checkallerrors
-		debug.setlocal(<table>,1)	...number expected...
-		debug.setlocal('abc',1)	...number expected...
--- checkallerrors
-		debug.setlocal(1,'abc')	...value expected...
-		debug.setlocal(1,true)	...value expected...
-		debug.setlocal(1,<table>)	...value expected...
-		debug.setlocal(1,<function>)	...value expected...
-		debug.setlocal(1,<thread>)	...value expected...
--- checkallerrors
-		debug.setlocal(<table>,1,1,nil)	...number expected...
-		debug.setlocal('abc',1,1,nil)	...number expected...
-		debug.setlocal(<table>,1,1,'foo')	...number expected...
-		debug.setlocal('abc',1,1,'foo')	...number expected...
--- checkallerrors
-		debug.setlocal(10,1,'foo')	...level out of range...
====== debug.setmetatable ======
--- checkallpass
-		debug.setmetatable(nil,<table>)	
-		debug.setmetatable('abc',<table>)	'abc'
-		debug.setmetatable(1.25,<table>)	1.25
-		debug.setmetatable(true,<table>)	true
-		debug.setmetatable(<table>,<table>)	<table>
-		debug.setmetatable(<function>,<table>)	<function>
-		debug.setmetatable(<thread>,<table>)	<thread>
-		debug.setmetatable(nil,nil)	
-		debug.setmetatable('abc',nil)	'abc'
-		debug.setmetatable(1.25,nil)	1.25
-		debug.setmetatable(true,nil)	true
-		debug.setmetatable(<table>,nil)	<table>
-		debug.setmetatable(<function>,nil)	<function>
-		debug.setmetatable(<thread>,nil)	<thread>
--- checkallerrors
-		debug.setmetatable()	...nil or table...
--- checkallerrors
-		debug.setmetatable(nil)	...nil or table...
-		debug.setmetatable('abc')	...nil or table...
-		debug.setmetatable(1.25)	...nil or table...
-		debug.setmetatable(true)	...nil or table...
-		debug.setmetatable(<table>)	...nil or table...
-		debug.setmetatable(<function>)	...nil or table...
-		debug.setmetatable(<thread>)	...nil or table...
====== debug.setupvalue ======
--- checkallpass
-		debug.setupvalue(<function>,2,nil)	'p'
-		debug.setupvalue(<function>,'3',nil)	'q'
-		debug.setupvalue(<function>,2,true)	'p'
-		debug.setupvalue(<function>,'3',true)	'q'
-		debug.setupvalue(<function>,2,'abc')	'p'
-		debug.setupvalue(<function>,'3','abc')	'q'
p,q	abc	abc
--- checkallerrors
-		debug.setupvalue()	...value expected...
--- checkallerrors
-		debug.setupvalue(<function>)	...value expected...
--- checkallerrors
-		debug.setupvalue(<function>,2)	...value expected...
--- checkallerrors
-		debug.setupvalue(nil,2)	...value expected...
-		debug.setupvalue('abc',2)	...value expected...
-		debug.setupvalue(1.25,2)	...value expected...
-		debug.setupvalue(true,2)	...value expected...
-		debug.setupvalue(<table>,2)	...value expected...
-		debug.setupvalue(<thread>,2)	...value expected...
--- checkallerrors
-		debug.setupvalue(<function>,nil)	...value expected...
-		debug.setupvalue(<function>,'abc')	...value expected...
-		debug.setupvalue(<function>,true)	...value expected...
-		debug.setupvalue(<function>,<table>)	...value expected...
-		debug.setupvalue(<function>,<function>)	...value expected...
-		debug.setupvalue(<function>,<thread>)	...value expected...
--- checkallerrors
-		debug.setupvalue(<function>,nil,2)	...number expected...
-		debug.setupvalue(<function>,'abc',2)	...number expected...
-		debug.setupvalue(<function>,true,2)	...number expected...
-		debug.setupvalue(<function>,<table>,2)	...number expected...
-		debug.setupvalue(<function>,<function>,2)	...number expected...
-		debug.setupvalue(<function>,<thread>,2)	...number expected...
--- checkallerrors
-		debug.setupvalue(nil,2,2)	...function expected...
-		debug.setupvalue('abc',2,2)	...function expected...
-		debug.setupvalue(1.25,2,2)	...function expected...
-		debug.setupvalue(true,2,2)	...function expected...
-		debug.setupvalue(<table>,2,2)	...function expected...
-		debug.setupvalue(<thread>,2,2)	...function expected...
--- checkallerrors
-		debug.setupvalue(nil,nil,2)	...number expected...
-		debug.setupvalue('abc',nil,2)	...number expected...
-		debug.setupvalue(1.25,nil,2)	...number expected...
-		debug.setupvalue(true,nil,2)	...number expected...
-		debug.setupvalue(<table>,nil,2)	...number expected...
-		debug.setupvalue(<thread>,nil,2)	...number expected...
-		debug.setupvalue(nil,'abc',2)	...number expected...
-		debug.setupvalue('abc','abc',2)	...number expected...
-		debug.setupvalue(1.25,'abc',2)	...number expected...
-		debug.setupvalue(true,'abc',2)	...number expected...
-		debug.setupvalue(<table>,'abc',2)	...number expected...
-		debug.setupvalue(<thread>,'abc',2)	...number expected...
-		debug.setupvalue(nil,true,2)	...number expected...
-		debug.setupvalue('abc',true,2)	...number expected...
-		debug.setupvalue(1.25,true,2)	...number expected...
-		debug.setupvalue(true,true,2)	...number expected...
-		debug.setupvalue(<table>,true,2)	...number expected...
-		debug.setupvalue(<thread>,true,2)	...number expected...
-		debug.setupvalue(nil,<table>,2)	...number expected...
-		debug.setupvalue('abc',<table>,2)	...number expected...
-		debug.setupvalue(1.25,<table>,2)	...number expected...
-		debug.setupvalue(true,<table>,2)	...number expected...
-		debug.setupvalue(<table>,<table>,2)	...number expected...
-		debug.setupvalue(<thread>,<table>,2)	...number expected...
-		debug.setupvalue(nil,<function>,2)	...number expected...
-		debug.setupvalue('abc',<function>,2)	...number expected...
-		debug.setupvalue(1.25,<function>,2)	...number expected...
-		debug.setupvalue(true,<function>,2)	...number expected...
-		debug.setupvalue(<table>,<function>,2)	...number expected...
-		debug.setupvalue(<thread>,<function>,2)	...number expected...
-		debug.setupvalue(nil,<thread>,2)	...number expected...
-		debug.setupvalue('abc',<thread>,2)	...number expected...
-		debug.setupvalue(1.25,<thread>,2)	...number expected...
-		debug.setupvalue(true,<thread>,2)	...number expected...
-		debug.setupvalue(<table>,<thread>,2)	...number expected...
-		debug.setupvalue(<thread>,<thread>,2)	...number expected...
====== debug.setuservalue ======
--- checkallerrors
-		debug.setuservalue()	...userdata expected...
--- checkallerrors
-		debug.setuservalue(nil)	...userdata expected...
-		debug.setuservalue('abc')	...userdata expected...
-		debug.setuservalue(1.25)	...userdata expected...
-		debug.setuservalue(true)	...userdata expected...
-		debug.setuservalue(<table>)	...userdata expected...
-		debug.setuservalue(<function>)	...userdata expected...
-		debug.setuservalue(<thread>)	...userdata expected...
--- checkallerrors
-		debug.setuservalue(nil,'abc')	...userdata expected...
-		debug.setuservalue('abc','abc')	...userdata expected...
-		debug.setuservalue(1.25,'abc')	...userdata expected...
-		debug.setuservalue(true,'abc')	...userdata expected...
-		debug.setuservalue(<table>,'abc')	...userdata expected...
-		debug.setuservalue(<function>,'abc')	...userdata expected...
-		debug.setuservalue(<thread>,'abc')	...userdata expected...
-		debug.setuservalue(nil,1.25)	...userdata expected...
-		debug.setuservalue('abc',1.25)	...userdata expected...
-		debug.setuservalue(1.25,1.25)	...userdata expected...
-		debug.setuservalue(true,1.25)	...userdata expected...
-		debug.setuservalue(<table>,1.25)	...userdata expected...
-		debug.setuservalue(<function>,1.25)	...userdata expected...
-		debug.setuservalue(<thread>,1.25)	...userdata expected...
====== debug.traceback ======
--- checkallpass
-		debug.traceback()	'stack traceback:
	[C]: in function 'pcall'
	args.lua:144: in function 'invoke'
	args.lua:168: in function 'checkallpass'
	debuglibargs.lua:131: in main chunk
	[C]: in ?'
--- checkallpass
-		debug.traceback('abc')	'abc
stack traceback:
	[C]: in function 'pcall'
	args.lua:144: in function 'invoke'
	args.lua:168: in function 'checkallpass'
	debuglibargs.lua:132: in main chunk
	[C]: in ?'
--- checkallpass
-		debug.traceback('abc',1.25)	'abc
stack traceback:
	[C]: in function 'pcall'
	args.lua:144: in function 'invoke'
	args.lua:168: in function 'checkallpass'
	debuglibargs.lua:133: in main chunk
	[C]: in ?'
--- checkallpass
-		debug.traceback(<thread>)	'stack traceback:
	[C]: in function 'pcall'
	args.lua:144: in function 'invoke'
	args.lua:168: in function 'checkallpass'
	debuglibargs.lua:134: in main chunk
	[C]: in ?'
--- checkallpass
-		debug.traceback(<thread>,'abc')	'abc
stack traceback:
	[C]: in function 'pcall'
	args.lua:144: in function 'invoke'
	args.lua:168: in function 'checkallpass'
	debuglibargs.lua:135: in main chunk
	[C]: in ?'
--- checkallpass
-		debug.traceback(<thread>,'abc',1.25)	'abc
stack traceback:
	[C]: in function 'pcall'
	args.lua:144: in function 'invoke'
	args.lua:168: in function 'checkallpass'
	debuglibargs.lua:136: in main chunk
	[C]: in ?'
--- checkallpass
-		debug.traceback(<function>)	<function>
-		debug.traceback(true)	true
-		debug.traceback(<table>)	<table>
--- checkallpass
-		debug.traceback(<function>,nil)	<function>
-		debug.traceback(true,nil)	true
-		debug.traceback(<table>,nil)	<table>
-		debug.traceback(<function>,'abc')	<function>
-		debug.traceback(true,'abc')	true
-		debug.traceback(<table>,'abc')	<table>
-		debug.traceback(<function>,true)	<function>
-		debug.traceback(true,true)	true
-		debug.traceback(<table>,true)	<table>
-		debug.traceback(<function>,<table>)	<function>
-		debug.traceback(true,<table>)	true
-		debug.traceback(<table>,<table>)	<table>
-		debug.traceback(<function>,<function>)	<function>
-		debug.traceback(true,<function>)	true
-		debug.traceback(<table>,<function>)	<table>
-		debug.traceback(<function>,<thread>)	<function>
-		debug.traceback(true,<thread>)	true
-		debug.traceback(<table>,<thread>)	<table>
====== debug.upvalueid ======
--- checkallpass
-		debug.upvalueid(<function>,1)	<userdata>
-		debug.upvalueid(<function>,'2')	<userdata>
--- checkallerrors
-		debug.upvalueid()	...number expected...
--- checkallerrors
-		debug.upvalueid(nil,1)	...function expected...
-		debug.upvalueid('abc',1)	...function expected...
-		debug.upvalueid(1.25,1)	...function expected...
-		debug.upvalueid(true,1)	...function expected...
-		debug.upvalueid(<table>,1)	...function expected...
-		debug.upvalueid(<thread>,1)	...function expected...
-		debug.upvalueid(nil,'2')	...function expected...
-		debug.upvalueid('abc','2')	...function expected...
-		debug.upvalueid(1.25,'2')	...function expected...
-		debug.upvalueid(true,'2')	...function expected...
-		debug.upvalueid(<table>,'2')	...function expected...
-		debug.upvalueid(<thread>,'2')	...function expected...
--- checkallerrors
-		debug.upvalueid(<function>,nil)	...number expected...
-		debug.upvalueid(<function>,'abc')	...number expected...
-		debug.upvalueid(<function>,true)	...number expected...
-		debug.upvalueid(<function>,<table>)	...number expected...
-		debug.upvalueid(<function>,<function>)	...number expected...
-		debug.upvalueid(<function>,<thread>)	...number expected...
====== debug.upvaluejoin ======
--- checkallpass
-		debug.upvaluejoin(<function>,1,<function>,1)	
-		debug.upvaluejoin(<function>,'2',<function>,1)	
-		debug.upvaluejoin(<function>,1,<function>,'2')	
-		debug.upvaluejoin(<function>,'2',<function>,'2')	
--- checkallerrors
-		debug.upvaluejoin()	...number expected...
--- checkallerrors
-		debug.upvaluejoin(nil,1)	...function expected...
-		debug.upvaluejoin('abc',1)	...function expected...
-		debug.upvaluejoin(1.25,1)	...function expected...
-		debug.upvaluejoin(true,1)	...function expected...
-		debug.upvaluejoin(<table>,1)	...function expected...
-		debug.upvaluejoin(<thread>,1)	...function expected...
-		debug.upvaluejoin(nil,'2')	...function expected...
-		debug.upvaluejoin('abc','2')	...function expected...
-		debug.upvaluejoin(1.25,'2')	...function expected...
-		debug.upvaluejoin(true,'2')	...function expected...
-		debug.upvaluejoin(<table>,'2')	...function expected...
-		debug.upvaluejoin(<thread>,'2')	...function expected...
--- checkallerrors
-		debug.upvaluejoin(<function>,nil)	...number expected...
-		debug.upvaluejoin(<function>,'abc')	...number expected...
-		debug.upvaluejoin(<function>,true)	...number expected...
-		debug.upvaluejoin(<function>,<table>)	...number expected...
-		debug.upvaluejoin(<function>,<function>)	...number expected...
-		debug.upvaluejoin(<function>,<thread>)	...number expected...
--- checkallerrors
-		debug.upvaluejoin(nil,1,<function>,1)	...function expected...
-		debug.upvaluejoin('abc',1,<function>,1)	...function expected...
-		debug.upvaluejoin(1.25,1,<function>,1)	...function expected...
-		debug.upvaluejoin(true,1,<function>,1)	...function expected...
-		debug.upvaluejoin(<table>,1,<function>,1)	...function expected...
-		debug.upvaluejoin(<thread>,1,<function>,1)	...function expected...
--- checkallerrors
-		debug.upvaluejoin(<function>,nil,<function>,1)	...number expected...
-		debug.upvaluejoin(<function>,'abc',<function>,1)	...number expected...
-		debug.upvaluejoin(<function>,true,<function>,1)	...number expected...
-		debug.upvaluejoin(<function>,<table>,<function>,1)	...number expected...
-		debug.upvaluejoin(<function>,<function>,<function>,1)	...number expected...
-		debug.upvaluejoin(<function>,<thread>,<function>,1)	...number expected...
--- checkallerrors
-		debug.upvaluejoin(<function>,1,nil,1)	...function expected...
-		debug.upvaluejoin(<function>,1,'abc',1)	...function expected...
-		debug.upvaluejoin(<function>,1,1.25,1)	...function expected...
-		debug.upvaluejoin(<function>,1,true,1)	...function expected...
-		debug.upvaluejoin(<function>,1,<table>,1)	...function expected...
-		debug.upvaluejoin(<function>,1,<thread>,1)	...function expected...
-		debug.upvaluejoin(<function>,1,nil,'2')	...function expected...
-		debug.upvaluejoin(<function>,1,'abc','2')	...function expected...
-		debug.upvaluejoin(<function>,1,1.25,'2')	...function expected...
-		debug.upvaluejoin(<function>,1,true,'2')	...function expected...
-		debug.upvaluejoin(<function>,1,<table>,'2')	...function expected...
-		debug.upvaluejoin(<function>,1,<thread>,'2')	...function expected...
--- checkallerrors
-		debug.upvaluejoin(<function>,1,<function>,nil)	...number expected...
-		debug.upvaluejoin(<function>,1,<function>,'abc')	...number expected...
-		debug.upvaluejoin(<function>,1,<function>,true)	...number expected...
-		debug.upvaluejoin(<function>,1,<function>,<table>)	...number expected...
-		debug.upvaluejoin(<function>,1,<function>,<function>)	...number expected...
-		debug.upvaluejoin(<function>,1,<function>,<thread>)	...number expected...
--- checkallerrors
-		debug.upvaluejoin(1,<function>,<function>,1)	...number expected...
--- checkallerrors
-		debug.upvaluejoin(<function>,<function>,1,1)	...number expected...
--- checkallerrors
-		debug.upvaluejoin(<function>,1,1,<function>)	...number expected...
--- checkallerrors
-		debug.upvaluejoin(<function>,<function>,1,<function>)	...number expected...
--- checkallerrors
-		debug.upvaluejoin(1,1,1,<function>)	...function expected...
--- checkallerrors
-		debug.upvaluejoin(1,<function>,<function>,<function>)	...number expected...
--- checkallerrors
-		debug.upvaluejoin(1,<function>,1,1)	...number expected...
--- checkallerrors
-		debug.upvaluejoin(1,<function>,1,<function>)	...number expected...
