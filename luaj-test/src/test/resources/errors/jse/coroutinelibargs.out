====== coroutine.create ======
--- checkallpass
-		coroutine.create(<function>)	<thread>
--- checkallerrors
-		coroutine.create(nil)	...bad argument...
-		coroutine.create('abc')	...bad argument...
-		coroutine.create(1.25)	...bad argument...
-		coroutine.create(true)	...bad argument...
-		coroutine.create(<table>)	...bad argument...
-		coroutine.create(<thread>)	...bad argument...
====== coroutine.resume ======
--- checkallpass
-		coroutine.resume(<thread>,nil)	true
-		coroutine.resume(<thread>,'abc')	true
-		coroutine.resume(<thread>,1.25)	true
-		coroutine.resume(<thread>,true)	true
-		coroutine.resume(<thread>,<table>)	true
-		coroutine.resume(<thread>,<function>)	true
-		coroutine.resume(<thread>,<thread>)	true
--- checkallerrors
-		coroutine.resume(nil)	...bad argument...
-		coroutine.resume('abc')	...bad argument...
-		coroutine.resume(1.25)	...bad argument...
-		coroutine.resume(true)	...bad argument...
-		coroutine.resume(<table>)	...bad argument...
-		coroutine.resume(<function>)	...bad argument...
====== coroutine.running ======
--- checkallpass
-		coroutine.running(nil)	<thread>,true
-		coroutine.running('abc')	<thread>,true
-		coroutine.running(1.25)	<thread>,true
-		coroutine.running(true)	<thread>,true
-		coroutine.running(<table>)	<thread>,true
-		coroutine.running(<function>)	<thread>,true
-		coroutine.running(<thread>)	<thread>,true
====== coroutine.status ======
--- checkallpass
-		coroutine.status(<thread>)	'suspended'
--- checkallerrors
-		coroutine.status(nil)	...bad argument...
-		coroutine.status('abc')	...bad argument...
-		coroutine.status(1.25)	...bad argument...
-		coroutine.status(true)	...bad argument...
-		coroutine.status(<table>)	...bad argument...
-		coroutine.status(<function>)	...bad argument...
====== coroutine.wrap ======
--- checkallpass
-		coroutine.wrap(<function>)	<function>
--- checkallerrors
-		coroutine.wrap(nil)	...bad argument...
-		coroutine.wrap('abc')	...bad argument...
-		coroutine.wrap(1.25)	...bad argument...
-		coroutine.wrap(true)	...bad argument...
-		coroutine.wrap(<table>)	...bad argument...
-		coroutine.wrap(<thread>)	...bad argument...
====== coroutine.yield ======
status	suspended
true
status	suspended
yield	abc	1.25
true	abc	1.25	true
status	suspended
yield	abc	1.25
false	error within coroutine thread
status	dead
